import { ai } from "./client";

export async function generateImage(prompt: string, aspectRatio: string, imageStyle: string, negativePrompt: string): Promise<string> {
    
    let finalPrompt = prompt;

    if (imageStyle && imageStyle !== 'Default') {
        const styleKeywords: Record<string, string> = {
            'Minimalist & Clean': ', minimalist, clean aesthetic, simple, high-key lighting, soft natural light',
            'Lush & Organic': ', lush, organic, natural, green, botanical, earthy tones, soft lighting',
            'Luxury & Gold': ', luxury, elegant, gold accents, premium, sophisticated, dramatic lighting, rich textures',
            'Vibrant & Playful': ', vibrant colors, playful, energetic, pop art style, bold composition, colorful',
        };
        finalPrompt += styleKeywords[imageStyle] || '';
    }

    if (negativePrompt && negativePrompt.trim()) {
        finalPrompt += `. Avoid the following elements: ${negativePrompt.trim()}.`;
    }

    finalPrompt += `, product photography, for a Pakistani skincare brand Chamkili, high resolution, photorealistic, aesthetic`;

    try {
        const imageResponse = await ai.models.generateImages({
            model: 'imagen-3.0-generate-002',
            prompt: finalPrompt,
            config: { numberOfImages: 1, outputMimeType: 'image/jpeg', aspectRatio },
        });

        if (imageResponse.generatedImages && imageResponse.generatedImages.length > 0) {
            return `data:image/jpeg;base64,${imageResponse.generatedImages[0].image.imageBytes}`;
        }
        throw new Error("No image was generated by the API.");

    } catch(error) {
        console.error(`Failed to generate image for prompt: "${prompt}"`, error);
        throw new Error(`Failed to generate image: ${error instanceof Error ? error.message : String(error)}`);
    }
}
